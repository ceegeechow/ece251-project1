C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/camille/SimplicityStudio/v4_workspace/EFM8BB3_ExternalInterrupts_2/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEX
                    -TEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Use
                    -rs/camille/SimplicityStudio/v4_workspace/EFM8BB3_ExternalInterrupts_2/inc;/Applications/Simplicity Studio.app/Contents/E
                    -clipse/developer/sdks/8051/v4.0.3//Device/shared/si8051base;/Applications/Simplicity Studio.app/Contents/Eclipse/develop
                    -er/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/Ini
                    -tDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              RSTSRC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              EXTINT_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // Restore the SFRPAGE
  39   1              SFRPAGE = SFRPAGE_save;
  40   1              // [Config Calls]$
  41   1      
  42   1      }
  43          
  44          //================================================================================
  45          // WDT_0_enter_DefaultMode_from_RESET
  46          //================================================================================
  47          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  48   1              // $[WDTCN - Watchdog Timer Control]
  49   1              SFRPAGE = 0x00;
  50   1              //Disable Watchdog with key sequence
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 2   

  51   1              WDTCN = 0xDE; //First key
  52   1              WDTCN = 0xAD; //Second key
  53   1              // [WDTCN - Watchdog Timer Control]$
  54   1      
  55   1      }
  56          
  57          //================================================================================
  58          // PORTS_0_enter_DefaultMode_from_RESET
  59          //================================================================================
  60          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  61   1              // $[P0 - Port 0 Pin Latch]
  62   1              /*
  63   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  64   1               //     float high.)
  65   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  66   1               //     float high.)
  67   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  68   1               //     float high.)
  69   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  70   1               //     float high.)
  71   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  72   1               //     float high.)
  73   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
  74   1               //     float high.)
  75   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
  76   1               //     float high.)
  77   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
  78   1               //     float high.)
  79   1               */
  80   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  81   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  82   1              // [P0 - Port 0 Pin Latch]$
  83   1      
  84   1              // $[P0MDOUT - Port 0 Output Mode]
  85   1              /*
  86   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  87   1               //     drain.)
  88   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  89   1               //     drain.)
  90   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  91   1               //     drain.)
  92   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  93   1               //     drain.)
  94   1               // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
  95   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  96   1               //     drain.)
  97   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  98   1               //     drain.)
  99   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 100   1               //     drain.)
 101   1               */
 102   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 103   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 104   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 105   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 106   1              // [P0MDOUT - Port 0 Output Mode]$
 107   1      
 108   1              // $[P0MDIN - Port 0 Input Mode]
 109   1              /*
 110   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 111   1               //     digital mode.)
 112   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 113   1               //     digital mode.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 3   

 114   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 115   1               //     digital mode.)
 116   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 117   1               //     digital mode.)
 118   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 119   1               //     digital mode.)
 120   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 121   1               //     digital mode.)
 122   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 123   1               //     digital mode.)
 124   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 125   1               //     digital mode.)
 126   1               */
 127   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 128   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 129   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 130   1              // [P0MDIN - Port 0 Input Mode]$
 131   1      
 132   1              // $[P0SKIP - Port 0 Skip]
 133   1              /*
 134   1               // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
 135   1               //     crossbar.)
 136   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 137   1               //     crossbar.)
 138   1               // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 139   1               //     crossbar.)
 140   1               // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 141   1               //     crossbar.)
 142   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 143   1               //     crossbar.)
 144   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 145   1               //     crossbar.)
 146   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 147   1               //     crossbar.)
 148   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 149   1               //     crossbar.)
 150   1               */
 151   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
 152   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 153   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 154   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 155   1              // [P0SKIP - Port 0 Skip]$
 156   1      
 157   1              // $[P0MASK - Port 0 Mask]
 158   1              /*
 159   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 160   1               //     ignored and will not cause a port mismatch event.)
 161   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 162   1               //     ignored and will not cause a port mismatch event.)
 163   1               // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
 164   1               //     ignored and will not cause a port mismatch event.)
 165   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 166   1               //     ignored and will not cause a port mismatch event.)
 167   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 168   1               //     ignored and will not cause a port mismatch event.)
 169   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 170   1               //     ignored and will not cause a port mismatch event.)
 171   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 172   1               //     ignored and will not cause a port mismatch event.)
 173   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 174   1               //     ignored and will not cause a port mismatch event.)
 175   1               */
 176   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 4   

 177   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 178   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 179   1              // [P0MASK - Port 0 Mask]$
 180   1      
 181   1              // $[P0MAT - Port 0 Match]
 182   1              /*
 183   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 184   1               //     with logic HIGH.)
 185   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 186   1               //     with logic HIGH.)
 187   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 188   1               //     with logic HIGH.)
 189   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 190   1               //     with logic HIGH.)
 191   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 192   1               //     with logic HIGH.)
 193   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 194   1               //     with logic HIGH.)
 195   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 196   1               //     with logic HIGH.)
 197   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 198   1               //     with logic HIGH.)
 199   1               */
 200   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 201   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 202   1              // [P0MAT - Port 0 Match]$
 203   1      
 204   1      }
 205          
 206          //================================================================================
 207          // PORTS_1_enter_DefaultMode_from_RESET
 208          //================================================================================
 209          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 210   1              // $[P1 - Port 1 Pin Latch]
 211   1              /*
 212   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 213   1               //     float high.)
 214   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 215   1               //     float high.)
 216   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 217   1               //     float high.)
 218   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 219   1               //     float high.)
 220   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 221   1               //     float high.)
 222   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 223   1               //     float high.)
 224   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 225   1               //     float high.)
 226   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 227   1               //     float high.)
 228   1               */
 229   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 230   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 231   1              // [P1 - Port 1 Pin Latch]$
 232   1      
 233   1              // $[P1MDOUT - Port 1 Output Mode]
 234   1              /*
 235   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
 236   1               //     drain.)
 237   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 238   1               //     drain.)
 239   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 5   

 240   1               //     drain.)
 241   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 242   1               //     drain.)
 243   1               // B4 (Port 1 Bit 4 Output Mode) = PUSH_PULL (P1.4 output is push-pull.)
 244   1               // B5 (Port 1 Bit 5 Output Mode) = PUSH_PULL (P1.5 output is push-pull.)
 245   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 246   1               //     drain.)
 247   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 248   1               //     drain.)
 249   1               */
 250   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 251   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 252   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 253   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 254   1              // [P1MDOUT - Port 1 Output Mode]$
 255   1      
 256   1              // $[P1MDIN - Port 1 Input Mode]
 257   1              /*
 258   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 259   1               //     digital mode.)
 260   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 261   1               //     digital mode.)
 262   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 263   1               //     digital mode.)
 264   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 265   1               //     digital mode.)
 266   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 267   1               //     digital mode.)
 268   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 269   1               //     digital mode.)
 270   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 271   1               //     digital mode.)
 272   1               // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 273   1               //     analog mode.)
 274   1               */
 275   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 276   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 277   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 278   1              // [P1MDIN - Port 1 Input Mode]$
 279   1      
 280   1              // $[P1SKIP - Port 1 Skip]
 281   1              /*
 282   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 283   1               //     crossbar.)
 284   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 285   1               //     crossbar.)
 286   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 287   1               //     crossbar.)
 288   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 289   1               //     crossbar.)
 290   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 291   1               //     crossbar.)
 292   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 293   1               //     crossbar.)
 294   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 295   1               //     crossbar.)
 296   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 297   1               //     crossbar.)
 298   1               */
 299   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 300   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 301   1                              | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 302   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 6   

 303   1              // [P1SKIP - Port 1 Skip]$
 304   1      
 305   1              // $[P1MASK - Port 1 Mask]
 306   1              /*
 307   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 308   1               //     ignored and will not cause a port mismatch event.)
 309   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 310   1               //     ignored and will not cause a port mismatch event.)
 311   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 312   1               //     ignored and will not cause a port mismatch event.)
 313   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 314   1               //     ignored and will not cause a port mismatch event.)
 315   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 316   1               //     ignored and will not cause a port mismatch event.)
 317   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 318   1               //     ignored and will not cause a port mismatch event.)
 319   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 320   1               //     ignored and will not cause a port mismatch event.)
 321   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 322   1               //     ignored and will not cause a port mismatch event.)
 323   1               */
 324   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 325   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 326   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 327   1              // [P1MASK - Port 1 Mask]$
 328   1      
 329   1              // $[P1MAT - Port 1 Match]
 330   1              /*
 331   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 332   1               //     with logic HIGH.)
 333   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 334   1               //     with logic HIGH.)
 335   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 336   1               //     with logic HIGH.)
 337   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 338   1               //     with logic HIGH.)
 339   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 340   1               //     with logic HIGH.)
 341   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 342   1               //     with logic HIGH.)
 343   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 344   1               //     with logic HIGH.)
 345   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 346   1               //     with logic HIGH.)
 347   1               */
 348   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 349   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 350   1              // [P1MAT - Port 1 Match]$
 351   1      
 352   1      }
 353          
 354          //================================================================================
 355          // PORTS_2_enter_DefaultMode_from_RESET
 356          //================================================================================
 357          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 358   1              // $[P2 - Port 2 Pin Latch]
 359   1              // [P2 - Port 2 Pin Latch]$
 360   1      
 361   1              // $[P2MDOUT - Port 2 Output Mode]
 362   1              /*
 363   1               // B0 (Port 2 Bit 0 Output Mode) = OPEN_DRAIN (P2.0 output is open-
 364   1               //     drain.)
 365   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 7   

 366   1               //     drain.)
 367   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 368   1               //     drain.)
 369   1               // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
 370   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 371   1               //     drain.)
 372   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 373   1               //     drain.)
 374   1               // B6 (Port 2 Bit 6 Output Mode) = OPEN_DRAIN (P2.6 output is open-
 375   1               //     drain.)
 376   1               */
 377   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 378   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 379   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 380   1                              | P2MDOUT_B6__OPEN_DRAIN;
 381   1              // [P2MDOUT - Port 2 Output Mode]$
 382   1      
 383   1              // $[P2MDIN - Port 2 Input Mode]
 384   1              // [P2MDIN - Port 2 Input Mode]$
 385   1      
 386   1              // $[P2SKIP - Port 2 Skip]
 387   1              /*
 388   1               // B0 (Port 2 Bit 0 Skip) = NOT_SKIPPED (P2.0 pin is not skipped by the
 389   1               //     crossbar.)
 390   1               // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 391   1               //     crossbar.)
 392   1               // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 393   1               //     crossbar.)
 394   1               // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 395   1               //     crossbar.)
 396   1               */
 397   1              SFRPAGE = 0x20;
 398   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 399   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 400   1              // [P2SKIP - Port 2 Skip]$
 401   1      
 402   1              // $[P2MASK - Port 2 Mask]
 403   1              // [P2MASK - Port 2 Mask]$
 404   1      
 405   1              // $[P2MAT - Port 2 Match]
 406   1              // [P2MAT - Port 2 Match]$
 407   1      
 408   1      }
 409          
 410          //================================================================================
 411          // PBCFG_0_enter_DefaultMode_from_RESET
 412          //================================================================================
 413          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 414   1              // $[XBR2 - Port I/O Crossbar 2]
 415   1              /*
 416   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 417   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 418   1               //     mode).)
 419   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 420   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 421   1               //     pin.)
 422   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 423   1               //     at Port pin.)
 424   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 425   1               //     at Port pin.)
 426   1               */
 427   1              SFRPAGE = 0x00;
 428   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 8   

 429   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 430   1                              | XBR2_URT1CTSE__DISABLED;
 431   1              // [XBR2 - Port I/O Crossbar 2]$
 432   1      
 433   1              // $[PRTDRV - Port Drive Strength]
 434   1              // [PRTDRV - Port Drive Strength]$
 435   1      
 436   1              // $[XBR0 - Port I/O Crossbar 0]
 437   1              // [XBR0 - Port I/O Crossbar 0]$
 438   1      
 439   1              // $[XBR1 - Port I/O Crossbar 1]
 440   1              // [XBR1 - Port I/O Crossbar 1]$
 441   1      
 442   1      }
 443          
 444          //================================================================================
 445          // RSTSRC_0_enter_DefaultMode_from_RESET
 446          //================================================================================
 447          extern void RSTSRC_0_enter_DefaultMode_from_RESET(void) {
 448   1              // $[RSTSRC - Reset Source]
 449   1              /*
 450   1               // PORSF (Power-On / Supply Monitor Reset Flag, and Supply Monitor Reset
 451   1               //     Enable) = NOT_SET (A power-on or supply monitor reset did not occur.)
 452   1               // MCDRSF (Missing Clock Detector Enable and Flag) = SET (A missing clock
 453   1               //     detector reset occurred.)
 454   1               // C0RSEF (Comparator0 Reset Enable and Flag) = NOT_SET (A Comparator 0
 455   1               //     reset did not occur.)
 456   1               */
 457   1              RSTSRC = RSTSRC_PORSF__NOT_SET | RSTSRC_MCDRSF__SET
 458   1                              | RSTSRC_C0RSEF__NOT_SET;
 459   1              // [RSTSRC - Reset Source]$
 460   1      
 461   1      }
 462          
 463          //================================================================================
 464          // CLOCK_0_enter_DefaultMode_from_RESET
 465          //================================================================================
 466          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 467   1              // $[HFOSC1 Setup]
 468   1              // [HFOSC1 Setup]$
 469   1      
 470   1              // $[CLKSEL - Clock Select]
 471   1              /*
 472   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 473   1               //     High Frequency Oscillator 0.)
 474   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 475   1               //     selected clock source divided by 1.)
 476   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 477   1               //     High Frequency Oscillator 0.)
 478   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 479   1               //     selected clock source divided by 1.)
 480   1               */
 481   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 482   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 483   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 484   1                      ;
 485   1              // [CLKSEL - Clock Select]$
 486   1      
 487   1      }
 488          
 489          //================================================================================
 490          // TIMER01_0_enter_DefaultMode_from_RESET
 491          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 9   

 492          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 493   1              // $[Timer Initialization]
 494   1              //Save Timer Configuration
 495   1              uint8_t TCON_save;
 496   1              TCON_save = TCON;
 497   1              //Stop Timers
 498   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 499   1      
 500   1              // [Timer Initialization]$
 501   1      
 502   1              // $[TH0 - Timer 0 High Byte]
 503   1              // [TH0 - Timer 0 High Byte]$
 504   1      
 505   1              // $[TL0 - Timer 0 Low Byte]
 506   1              // [TL0 - Timer 0 Low Byte]$
 507   1      
 508   1              // $[TH1 - Timer 1 High Byte]
 509   1              /*
 510   1               // TH1 (Timer 1 High Byte) = 0x96
 511   1               */
 512   1              TH1 = (0x96 << TH1_TH1__SHIFT); //different
 513   1      
 514   1              TH0 = (0xC0 << TH0_TH0__SHIFT);
 515   1              // [TH1 - Timer 1 High Byte]$
 516   1      
 517   1              // $[TL1 - Timer 1 Low Byte]
 518   1              // [TL1 - Timer 1 Low Byte]$
 519   1      
 520   1              // $[Timer Restoration]
 521   1              //Restore Timer Configuration
 522   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 523   1      
 524   1              // [Timer Restoration]$
 525   1      
 526   1      }
 527          
 528          //================================================================================
 529          // TIMER16_2_enter_DefaultMode_from_RESET
 530          //================================================================================
 531          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 532   1              // $[Timer Initialization]
 533   1              // Save Timer Configuration
 534   1              uint8_t TMR2CN0_TR2_save;
 535   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 536   1              // Stop Timer
 537   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 538   1              // [Timer Initialization]$
 539   1      
 540   1              // $[TMR2CN1 - Timer 2 Control 1]
 541   1              // [TMR2CN1 - Timer 2 Control 1]$
 542   1      
 543   1              // $[TMR2CN0 - Timer 2 Control]
 544   1              // [TMR2CN0 - Timer 2 Control]$
 545   1      
 546   1              // $[TMR2H - Timer 2 High Byte]
 547   1              // [TMR2H - Timer 2 High Byte]$
 548   1      
 549   1              // $[TMR2L - Timer 2 Low Byte]
 550   1              // [TMR2L - Timer 2 Low Byte]$
 551   1      
 552   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 553   1              /*
 554   1               // TMR2RLH (Timer 2 Reload High Byte) = 0xFE
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 10  

 555   1               */
 556   1              TMR2RLH = (0xFE << TMR2RLH_TMR2RLH__SHIFT);
 557   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 558   1      
 559   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 560   1              /*
 561   1               // TMR2RLL (Timer 2 Reload Low Byte) = 0x68
 562   1               */
 563   1              TMR2RLL = (0x68 << TMR2RLL_TMR2RLL__SHIFT);
 564   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 565   1      
 566   1              // $[TMR2CN0]
 567   1              /*
 568   1               // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 569   1               */
 570   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 571   1              // [TMR2CN0]$
 572   1      
 573   1              // $[Timer Restoration]
 574   1              // Restore Timer Configuration
 575   1              TMR2CN0 |= TMR2CN0_TR2_save;
 576   1              // [Timer Restoration]$
 577   1      
 578   1      }
 579          
 580          //================================================================================
 581          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 582          //================================================================================
 583          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 584   1              // $[CKCON0 - Clock Control 0]
 585   1              /*
 586   1               // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 587   1               // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 588   1               //     defined by the prescale field, SCA.)
 589   1               // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 590   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 591   1               // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 592   1               //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 593   1               // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 594   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 595   1               // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 596   1               //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 597   1               // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 598   1               */
 599   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 600   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 601   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 602   1                              | CKCON0_T1M__SYSCLK; //PRESCALE for 8 bit reload
 603   1              // [CKCON0 - Clock Control 0]$
 604   1      
 605   1              // $[CKCON1 - Clock Control 1]
 606   1              // [CKCON1 - Clock Control 1]$
 607   1      
 608   1              // $[TMOD - Timer 0/1 Mode]
 609   1              /*
 610   1               // T0M (Timer 0 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 611   1               // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 612   1               //     Auto-Reload)
 613   1               // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 614   1               //     on the clock defined by T0M in the CKCON0 register.)
 615   1               // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 616   1               //     irrespective of INT0 logic level.)
 617   1               // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 11  

 618   1               //     on the clock defined by T1M in the CKCON0 register.)
 619   1               // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 620   1               //     irrespective of INT1 logic level.)
 621   1               */
 622   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 623   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 624   1              // [TMOD - Timer 0/1 Mode]$
 625   1      
 626   1              // $[TCON - Timer 0/1 Control]
 627   1              /*
 628   1               // IT0 (Interrupt 0 Type Select) = EDGE (INT0 is edge triggered.)
 629   1               // IT1 (Interrupt 1 Type Select) = EDGE (INT1 is edge triggered.)
 630   1               // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 631   1               */
 632   1              TCON |= TCON_IT0__EDGE | TCON_IT1__EDGE | TCON_TR1__RUN;
 633   1              // [TCON - Timer 0/1 Control]$
 634   1      
 635   1      }
 636          
 637          //================================================================================
 638          // EXTINT_0_enter_DefaultMode_from_RESET
 639          //================================================================================
 640          extern void EXTINT_0_enter_DefaultMode_from_RESET(void) {
 641   1              // $[IT01CF - INT0/INT1 Configuration]
 642   1              /*
 643   1               // IN0PL (INT0 Polarity) = ACTIVE_LOW (INT0 input is active low.)
 644   1               // IN0SL (INT0 Port Pin Selection) = P0_2 (Select P0.2.)
 645   1               // IN1PL (INT1 Polarity) = ACTIVE_LOW (INT1 input is active low.)
 646   1               // IN1SL (INT1 Port Pin Selection) = P0_3 (Select P0.3.)
 647   1               */
 648   1              IT01CF = IT01CF_IN0PL__ACTIVE_LOW | IT01CF_IN0SL__P0_2
 649   1                              | IT01CF_IN1PL__ACTIVE_LOW | IT01CF_IN1SL__P0_3;
 650   1              // [IT01CF - INT0/INT1 Configuration]$
 651   1      
 652   1      }
 653          
 654          //================================================================================
 655          // INTERRUPT_0_enter_DefaultMode_from_RESET
 656          //================================================================================
 657          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 658   1              // $[EIE1 - Extended Interrupt Enable 1]
 659   1              // [EIE1 - Extended Interrupt Enable 1]$
 660   1      
 661   1              // $[EIE2 - Extended Interrupt Enable 2]
 662   1              // [EIE2 - Extended Interrupt Enable 2]$
 663   1      
 664   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 665   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 666   1      
 667   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 668   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 669   1      
 670   1              // $[EIP2 - Extended Interrupt Priority 2]
 671   1              // [EIP2 - Extended Interrupt Priority 2]$
 672   1      
 673   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 674   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 675   1      
 676   1              // $[IE - Interrupt Enable]
 677   1              /*
 678   1               // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 679   1               // EX0 (External Interrupt 0 Enable) = ENABLED (Enable interrupt requests
 680   1               //     generated by the INT0 input.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/18/2017 18:19:23 PAGE 12  

 681   1               // EX1 (External Interrupt 1 Enable) = ENABLED (Enable interrupt requests
 682   1               //     generated by the INT1 input.)
 683   1               // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 684   1               //     interrupts.)
 685   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 686   1               //     interrupt.)
 687   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 688   1               //     interrupt.)
 689   1               // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 690   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 691   1               */
 692   1              IE = IE_EA__DISABLED | IE_EX0__ENABLED | IE_EX1__ENABLED
 693   1                              | IE_ESPI0__DISABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 694   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 695   1              // [IE - Interrupt Enable]$
 696   1      
 697   1              // $[IP - Interrupt Priority]
 698   1              // [IP - Interrupt Priority]$
 699   1      
 700   1              // $[IPH - Interrupt Priority High]
 701   1              // [IPH - Interrupt Priority High]$
 702   1      
 703   1      }
 704          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    176    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
