C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/26/2017 11:59:10 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/camille/SimplicityStudio/v4_workspace/EFM8BB3_Timer0_8bitReload_3/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXT
                    -END ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/User
                    -s/camille/SimplicityStudio/v4_workspace/EFM8BB3_Timer0_8bitReload_3/inc;/Applications/Simplicity Studio.app/Contents/Ecl
                    -ipse/developer/sdks/8051/v4.0.3//Device/shared/si8051base;/Applications/Simplicity Studio.app/Contents/Eclipse/developer
                    -/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitD
                    -evice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_1_enter_DefaultMode_from_RESET();
  28   1              PORTS_2_enter_DefaultMode_from_RESET();
  29   1              PBCFG_0_enter_DefaultMode_from_RESET();
  30   1              TIMER01_0_enter_DefaultMode_from_RESET();
  31   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  32   1              EXTINT_0_enter_DefaultMode_from_RESET();
  33   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  34   1              // Restore the SFRPAGE
  35   1              SFRPAGE = SFRPAGE_save;
  36   1              // [Config Calls]$
  37   1      
  38   1      }
  39          
  40          //================================================================================
  41          // WDT_0_enter_DefaultMode_from_RESET
  42          //================================================================================
  43          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  44   1              // $[WDTCN - Watchdog Timer Control]
  45   1              SFRPAGE = 0x00;
  46   1              //Disable Watchdog with key sequence
  47   1              WDTCN = 0xDE; //First key
  48   1              WDTCN = 0xAD; //Second key
  49   1              // [WDTCN - Watchdog Timer Control]$
  50   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/26/2017 11:59:10 PAGE 2   

  51   1      }
  52          
  53          //================================================================================
  54          // PORTS_2_enter_DefaultMode_from_RESET
  55          //================================================================================
  56          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
  57   1              // $[P2 - Port 2 Pin Latch]
  58   1              // [P2 - Port 2 Pin Latch]$
  59   1      
  60   1              // $[P2MDOUT - Port 2 Output Mode]
  61   1              /***********************************************************************
  62   1               - P2.0 output is open-drain
  63   1               - P2.1 output is open-drain
  64   1               - P2.2 output is open-drain
  65   1               - P2.3 output is push-pull
  66   1               - P2.4 output is open-drain
  67   1               - P2.5 output is open-drain
  68   1               - P2.6 output is open-drain
  69   1               ***********************************************************************/
  70   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
  71   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
  72   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
  73   1                              | P2MDOUT_B6__OPEN_DRAIN;
  74   1              // [P2MDOUT - Port 2 Output Mode]$
  75   1      
  76   1              // $[P2MDIN - Port 2 Input Mode]
  77   1              // [P2MDIN - Port 2 Input Mode]$
  78   1      
  79   1              // $[P2SKIP - Port 2 Skip]
  80   1              /***********************************************************************
  81   1               - P2.0 pin is not skipped by the crossbar
  82   1               - P2.1 pin is not skipped by the crossbar
  83   1               - P2.2 pin is not skipped by the crossbar
  84   1               - P2.3 pin is skipped by the crossbar
  85   1               ***********************************************************************/
  86   1              SFRPAGE = 0x20;
  87   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
  88   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
  89   1              // [P2SKIP - Port 2 Skip]$
  90   1      
  91   1              // $[P2MASK - Port 2 Mask]
  92   1              // [P2MASK - Port 2 Mask]$
  93   1      
  94   1              // $[P2MAT - Port 2 Match]
  95   1              // [P2MAT - Port 2 Match]$
  96   1      
  97   1      }
  98          
  99          //================================================================================
 100          // PBCFG_0_enter_DefaultMode_from_RESET
 101          //================================================================================
 102          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 103   1              // $[XBR2 - Port I/O Crossbar 2]
 104   1              /***********************************************************************
 105   1               - Weak Pullups enabled 
 106   1               - Crossbar enabled
 107   1               - UART1 I/O unavailable at Port pin
 108   1               - UART1 RTS1 unavailable at Port pin
 109   1               - UART1 CTS1 unavailable at Port pin
 110   1               ***********************************************************************/
 111   1              SFRPAGE = 0x00;
 112   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 113   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/26/2017 11:59:10 PAGE 3   

 114   1                              | XBR2_URT1CTSE__DISABLED;
 115   1              // [XBR2 - Port I/O Crossbar 2]$
 116   1      
 117   1              // $[PRTDRV - Port Drive Strength]
 118   1              // [PRTDRV - Port Drive Strength]$
 119   1      
 120   1              // $[XBR0 - Port I/O Crossbar 0]
 121   1              // [XBR0 - Port I/O Crossbar 0]$
 122   1      
 123   1              // $[XBR1 - Port I/O Crossbar 1]
 124   1              // [XBR1 - Port I/O Crossbar 1]$
 125   1      
 126   1      }
 127          
 128          //================================================================================
 129          // TIMER01_0_enter_DefaultMode_from_RESET
 130          //================================================================================
 131          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 132   1              // $[Timer Initialization]
 133   1              //Save Timer Configuration
 134   1              uint8_t TCON_save;
 135   1              TCON_save = TCON;
 136   1              //Stop Timers
 137   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 138   1      
 139   1              // [Timer Initialization]$
 140   1      
 141   1              // $[TH0 - Timer 0 High Byte]
 142   1              /***********************************************************************
 143   1               - Timer 0 High Byte = 0xC0
 144   1               ***********************************************************************/
 145   1              TH0 = (0xC0 << TH0_TH0__SHIFT);
 146   1              // [TH0 - Timer 0 High Byte]$
 147   1      
 148   1              // $[TL0 - Timer 0 Low Byte]
 149   1              // [TL0 - Timer 0 Low Byte]$
 150   1      
 151   1              // $[TH1 - Timer 1 High Byte]
 152   1              // [TH1 - Timer 1 High Byte]$
 153   1      
 154   1              // $[TL1 - Timer 1 Low Byte]
 155   1              // [TL1 - Timer 1 Low Byte]$
 156   1      
 157   1              // $[Timer Restoration]
 158   1              //Restore Timer Configuration
 159   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 160   1      
 161   1              // [Timer Restoration]$
 162   1      
 163   1      }
 164          
 165          //================================================================================
 166          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 167          //================================================================================
 168          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 169   1              // $[CKCON0 - Clock Control 0]
 170   1              /***********************************************************************
 171   1               - System clock divided by 48
 172   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 173   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 174   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 175   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 176   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/26/2017 11:59:10 PAGE 4   

 177   1               - Timer 1 uses the clock defined by the prescale field, SCA
 178   1               ***********************************************************************/
 179   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 180   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 181   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 182   1                              | CKCON0_T1M__PRESCALE;
 183   1              // [CKCON0 - Clock Control 0]$
 184   1      
 185   1              // $[CKCON1 - Clock Control 1]
 186   1              // [CKCON1 - Clock Control 1]$
 187   1      
 188   1              // $[TMOD - Timer 0/1 Mode]
 189   1              /***********************************************************************
 190   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 191   1               - Mode 0, 13-bit Counter/Timer
 192   1               - Timer Mode
 193   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 194   1               - Timer Mode
 195   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 196   1               ***********************************************************************/
 197   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 198   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 199   1              // [TMOD - Timer 0/1 Mode]$
 200   1      
 201   1              // $[TCON - Timer 0/1 Control]
 202   1              /***********************************************************************
 203   1               - Start Timer 0 running
 204   1               ***********************************************************************/
 205   1              TCON |= TCON_TR0__RUN;
 206   1              // [TCON - Timer 0/1 Control]$
 207   1      
 208   1      }
 209          
 210          //================================================================================
 211          // INTERRUPT_0_enter_DefaultMode_from_RESET
 212          //================================================================================
 213          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 214   1              // $[EIE1 - Extended Interrupt Enable 1]
 215   1              // [EIE1 - Extended Interrupt Enable 1]$
 216   1      
 217   1              // $[EIE2 - Extended Interrupt Enable 2]
 218   1              // [EIE2 - Extended Interrupt Enable 2]$
 219   1      
 220   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 221   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 222   1      
 223   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 224   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 225   1      
 226   1              // $[EIP2 - Extended Interrupt Priority 2]
 227   1              // [EIP2 - Extended Interrupt Priority 2]$
 228   1      
 229   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 230   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 231   1      
 232   1              // $[IE - Interrupt Enable]
 233   1              /***********************************************************************
 234   1               - Enable each interrupt according to its individual mask setting
 235   1               - Enable interrupt requests generated by the INT0 input
 236   1               - Enable interrupt requests generated by the INT1 input
 237   1               - Disable all SPI0 interrupts
 238   1               - Enable interrupt requests generated by the TF0 flag
 239   1               - Disable all Timer 1 interrupt
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/26/2017 11:59:10 PAGE 5   

 240   1               - Disable Timer 2 interrupt
 241   1               - Disable UART0 interrupt
 242   1               ***********************************************************************/
 243   1              IE = IE_EA__ENABLED | IE_EX0__ENABLED | IE_EX1__ENABLED | IE_ESPI0__DISABLED
 244   1                              | IE_ET0__ENABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 245   1                              | IE_ES0__DISABLED;
 246   1              // [IE - Interrupt Enable]$
 247   1      
 248   1              // $[IP - Interrupt Priority]
 249   1              // [IP - Interrupt Priority]$
 250   1      
 251   1              // $[IPH - Interrupt Priority High]
 252   1              // [IPH - Interrupt Priority High]$
 253   1      
 254   1      }
 255          
 256          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 257   1              // $[P1 - Port 1 Pin Latch]
 258   1              // [P1 - Port 1 Pin Latch]$
 259   1      
 260   1              // $[P1MDOUT - Port 1 Output Mode]
 261   1              /***********************************************************************
 262   1               - P1.0 output is open-drain
 263   1               - P1.1 output is open-drain
 264   1               - P1.2 output is open-drain
 265   1               - P1.3 output is open-drain
 266   1               - P1.4 output is push-pull
 267   1               - P1.5 output is push-pull
 268   1               - P1.6 output is push-pull
 269   1               - P1.7 output is open-drain
 270   1               ***********************************************************************/
 271   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 272   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 273   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 274   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 275   1              // [P1MDOUT - Port 1 Output Mode]$
 276   1      
 277   1              // $[P1MDIN - Port 1 Input Mode]
 278   1              // [P1MDIN - Port 1 Input Mode]$
 279   1      
 280   1              // $[P1SKIP - Port 1 Skip]
 281   1              /***********************************************************************
 282   1               - P1.0 pin is not skipped by the crossbar
 283   1               - P1.1 pin is not skipped by the crossbar
 284   1               - P1.2 pin is not skipped by the crossbar
 285   1               - P1.3 pin is not skipped by the crossbar
 286   1               - P1.4 pin is skipped by the crossbar
 287   1               - P1.5 pin is skipped by the crossbar
 288   1               - P1.6 pin is skipped by the crossbar
 289   1               - P1.7 pin is not skipped by the crossbar
 290   1               ***********************************************************************/
 291   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 292   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 293   1                              | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED | P1SKIP_B6__SKIPPED
 294   1                              | P1SKIP_B7__NOT_SKIPPED;
 295   1              // [P1SKIP - Port 1 Skip]$
 296   1      
 297   1              // $[P1MASK - Port 1 Mask]
 298   1              // [P1MASK - Port 1 Mask]$
 299   1      
 300   1              // $[P1MAT - Port 1 Match]
 301   1              // [P1MAT - Port 1 Match]$
 302   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/26/2017 11:59:10 PAGE 6   

 303   1      }
 304          
 305          extern void EXTINT_0_enter_DefaultMode_from_RESET(void) {
 306   1              // $[IT01CF - INT0/INT1 Configuration]
 307   1              /***********************************************************************
 308   1               - INT0 input is active low
 309   1               - Select P0.2
 310   1               - INT1 input is active low
 311   1               - Select P0.3
 312   1               ***********************************************************************/
 313   1              IT01CF = IT01CF_IN0PL__ACTIVE_LOW | IT01CF_IN0SL__P0_2
 314   1                              | IT01CF_IN1PL__ACTIVE_LOW | IT01CF_IN1SL__P0_3;
 315   1              // [IT01CF - INT0/INT1 Configuration]$
 316   1      
 317   1      }
 318          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    102    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
